{"remainingRequest":"/home/user21/front/frontend/node_modules/thread-loader/dist/cjs.js!/home/user21/front/frontend/node_modules/babel-loader/lib/index.js!/home/user21/front/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/user21/front/frontend/src/store/actions.js","dependencies":[{"path":"/home/user21/front/frontend/src/store/actions.js","mtime":1557469764025},{"path":"/home/user21/front/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// https://vuex.vuejs.org/en/actions.html\nexport default {// actions:{\n  //   obtainToken(username, password){\n  //     const payload = {\n  //       username: username,\n  //       password: password\n  //     }\n  //     axios.post(this.state.endpoints.obtainJWT, payload)\n  //       .then((response)=>{\n  //           this.commit('updateToken', response.data.token);\n  //         })\n  //       .catch((error)=>{\n  //           console.log(error);\n  //         })\n  //   },\n  //   refreshToken(){\n  //     const payload = {\n  //       token: this.state.jwt\n  //     }\n  //     axios.post(this.state.endpoints.refreshJWT, payload)\n  //       .then((response)=>{\n  //           this.commit('updateToken', response.data.token)\n  //         })\n  //       .catch((error)=>{\n  //           console.log(error)\n  //         })\n  //   },\n  //   inspectToken(){\n  //     const token = this.state.jwt;\n  //     if(token){\n  //       const decoded = jwt_decode(token);\n  //       const exp = decoded.exp\n  //       const orig_iat = decode.orig_iat\n  //       if(exp - (Date.now()/1000) < 1800 && (Date.now()/1000) - orig_iat < 628200){\n  //         this.dispatch('refreshToken')\n  //       } else if (exp -(Date.now()/1000) < 1800){\n  //         // DO NOTHING, DO NOT REFRESH          \n  //       } else {\n  //         // PROMPT USER TO RE-LOGIN, THIS ELSE CLAUSE COVERS THE CONDITION WHERE A TOKEN IS EXPIRED AS WELL\n  //       }\n  //     }\n  //   }\n  // }\n};",{"version":3,"sources":["/home/user21/front/frontend/src/store/actions.js"],"names":[],"mappings":"AAAA;AAEA,eAAe,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1Ca,CAAf","sourcesContent":["// https://vuex.vuejs.org/en/actions.html\n\nexport default {\n  // actions:{\n  //   obtainToken(username, password){\n  //     const payload = {\n  //       username: username,\n  //       password: password\n  //     }\n  //     axios.post(this.state.endpoints.obtainJWT, payload)\n  //       .then((response)=>{\n  //           this.commit('updateToken', response.data.token);\n  //         })\n  //       .catch((error)=>{\n  //           console.log(error);\n  //         })\n  //   },\n  //   refreshToken(){\n  //     const payload = {\n  //       token: this.state.jwt\n  //     }\n  //     axios.post(this.state.endpoints.refreshJWT, payload)\n  //       .then((response)=>{\n  //           this.commit('updateToken', response.data.token)\n  //         })\n  //       .catch((error)=>{\n  //           console.log(error)\n  //         })\n  //   },\n  //   inspectToken(){\n  //     const token = this.state.jwt;\n  //     if(token){\n  //       const decoded = jwt_decode(token);\n  //       const exp = decoded.exp\n  //       const orig_iat = decode.orig_iat\n  //       if(exp - (Date.now()/1000) < 1800 && (Date.now()/1000) - orig_iat < 628200){\n  //         this.dispatch('refreshToken')\n  //       } else if (exp -(Date.now()/1000) < 1800){\n  //         // DO NOTHING, DO NOT REFRESH          \n  //       } else {\n  //         // PROMPT USER TO RE-LOGIN, THIS ELSE CLAUSE COVERS THE CONDITION WHERE A TOKEN IS EXPIRED AS WELL\n  //       }\n  //     }\n  //   }\n  // }\n}\n"]}]}