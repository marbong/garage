{"remainingRequest":"/home/user21/front/frontend/node_modules/thread-loader/dist/cjs.js!/home/user21/front/frontend/node_modules/babel-loader/lib/index.js!/home/user21/front/frontend/node_modules/vuetify-loader/lib/loader.js!/home/user21/front/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/user21/front/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user21/front/frontend/src/views/GenieMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user21/front/frontend/src/views/GenieMusic.vue","mtime":1557469764029},{"path":"/home/user21/front/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/user21/front/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user21/front/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      search: '',\n      pagination: {\n        sortBy: 'song_name',\n        rowsPerPage: 10\n      },\n      headers: [{\n        text: 'SONG ID',\n        value: 'song_id',\n        class: \"subheading font-weight-bold\"\n      }, {\n        text: '곡명',\n        value: 'song_name',\n        class: \"subheading font-weight-bold\"\n      }, {\n        text: '곡명TTS',\n        value: 'song_tts',\n        class: \"subheading font-weight-bold\"\n      }, {\n        text: '곡명독음',\n        value: 'song_tr',\n        class: \"subheading  font-weight-bold\"\n      }, {\n        text: '가수명',\n        value: 'artist_name',\n        class: \"subheading font-weight-bold\"\n      }, {\n        text: '가수명TTS',\n        value: 'artist_tts',\n        class: \"subheading font-weight-bold\"\n      }, {\n        text: '가수명독음',\n        value: 'artist_tr',\n        class: \"subheading  font-weight-bold\"\n      }, {\n        text: '인기',\n        value: 'popularity',\n        class: \"subheading  font-weight-bold\"\n      }, {\n        text: '장르',\n        value: 'genre',\n        class: \"subheading  font-weight-bold\"\n      }, {\n        text: '출시',\n        value: 'release_date',\n        class: \"subheading  font-weight-bold\"\n      }, {\n        text: '순위',\n        value: 'ranking',\n        class: \"subheading  font-weight-bold\"\n      }],\n      data: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    axios.get('http://169.56.70.78:30782/api/music/').then(function (result) {\n      return _this.data = result.data;\n    });\n  },\n  computed: {\n    pages: function pages() {\n      if (this.pagination.rowsPerPage == null || this.pagination.totalItems == null) return 0;\n      return Math.ceil(this.pagination.totalItems / this.pagination.rowsPerPage);\n    }\n  },\n  methods: {\n    change_sort: function change_sort(column) {\n      if (this.pagination.sortBy === column) {\n        this.pagination.descending = !this.pagination.descending;\n      } else {\n        this.pagination.sortBy = column;\n        this.pagination.descending = false;\n      }\n    }\n  }\n};",{"version":3,"sources":["GenieMusic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AACA,QAAA,MAAA,EAAA,WADA;AAEA,QAAA,WAAA,EAAA;AAFA,OAFA;AAMA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA,UAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA,aAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,IAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OARA,EASA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OATA,EAUA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,cAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAVA,EAWA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAXA,CANA;AAmBA,MAAA,IAAA,EAAA;AAnBA,KAAA;AAAA,GADA;AAsBA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,sCAAA,EACA,IADA,CACA,UAAA,MAAA;AAAA,aAAA,KAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA;AAAA,KADA;AAEA,GAzBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,UAAA,KAAA,UAAA,CAAA,WAAA,IAAA,IAAA,IACA,KAAA,UAAA,CAAA,UAAA,IAAA,IADA,EAEA,OAAA,CAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,KAAA,UAAA,CAAA,UAAA,GAAA,KAAA,UAAA,CAAA,WAAA,CAAA;AACA;AANA,GA1BA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,MAAA,EAAA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,KAAA,MAAA,EAAA;AACA,aAAA,UAAA,CAAA,UAAA,GAAA,CAAA,KAAA,UAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,CAAA,MAAA,GAAA,MAAA;AACA,aAAA,UAAA,CAAA,UAAA,GAAA,KAAA;AACA;AACA;AARA;AAnCA,CAAA","sourcesContent":["<template>\n  <v-container fill-height fluid grid-list-xl>\n    <v-layout justify-center wrap>\n      <v-flex xs12 md8>      \n        <v-card>\n          <v-card-title class=\"subheading font-weight-bold\">지니뮤직 음악데이터\n            <v-spacer></v-spacer>\n            <v-text-field v-model=\"search\" append-icon=\"search\" label=\"검색\" single-line hide-details></v-text-field>\n          </v-card-title>\n          <v-data-table :headers=\"headers\" :items=\"data\" :search=\"search\"\n           class=\"elevation-1\" :pagination.sync=\"pagination\" rows-per-page-text=\"20\">\n            <template v-slot:items=\"props\">\n              <td>{{ props.item.id }}</td>\n              <td class=\"text-xs-left\">{{ props.item.song_name }}</td>\n              <td class=\"text-xs-left\">{{ props.item.song_tts }}</td>\n              <td class=\"text-xs-left\">{{ props.item.song_tr }}</td>\n              <td class=\"text-xs-left\">{{ props.item.artist_name }}</td>\n              <td class=\"text-xs-left\">{{ props.item.artist_tts }}</td>\n              <td class=\"text-xs-left\">{{ props.item.artist_tr }}</td>\n              <td class=\"text-xs-left\">{{ props.item.popularity }}</td>\n              <td class=\"text-xs-left\">{{ props.item.genre }}</td>\n              <td class=\"text-xs-left\">{{ props.item.release_date }}</td>\n              <td class=\"text-xs-left\">{{ props.item.ranking }}</td>\n            </template>\n            <v-alert v-slot:no-results :value=\"true\" color=\"error\" icon=\"warning\">\n              \"{{ search }}\" 검색결과가 없습니다.\n            </v-alert>\n          </v-data-table>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data: () => ({  \n    search: '',\n    pagination: {\n      sortBy: 'song_name',\n      rowsPerPage: 10\n    },\n    headers: [\n      { text: 'SONG ID', value: 'song_id', class: \"subheading font-weight-bold\"},\n      { text: '곡명', value: 'song_name', class: \"subheading font-weight-bold\"},\n      { text: '곡명TTS', value: 'song_tts', class: \"subheading font-weight-bold\"},\n      { text: '곡명독음', value: 'song_tr', class: \"subheading  font-weight-bold\"},\n      { text: '가수명', value: 'artist_name', class: \"subheading font-weight-bold\"},\n      { text: '가수명TTS', value: 'artist_tts', class: \"subheading font-weight-bold\"},\n      { text: '가수명독음', value: 'artist_tr', class: \"subheading  font-weight-bold\"},\n      { text: '인기', value: 'popularity', class: \"subheading  font-weight-bold\"},\n      { text: '장르', value: 'genre', class: \"subheading  font-weight-bold\"},\n      { text: '출시', value: 'release_date', class: \"subheading  font-weight-bold\"},\n      { text: '순위', value: 'ranking', class: \"subheading  font-weight-bold\"},\n    ],\n    data: []\n  }),\n  created: function () {\n    axios.get('http://169.56.70.78:30782/api/music/')\n      .then(result => this.data = result.data)\n  },\n  computed: {\n   pages: function () {\n      if (this.pagination.rowsPerPage == null ||\n        this.pagination.totalItems == null\n      ) return 0\n      return Math.ceil(this.pagination.totalItems / this.pagination.rowsPerPage)\n    }  \n  },\n\n  methods: {\n    change_sort: function (column) {\n      if (this.pagination.sortBy === column) {\n        this.pagination.descending = !this.pagination.descending\n      } else {\n        this.pagination.sortBy = column\n        this.pagination.descending = false\n      }\n    } \n  }\n}\n</script>"],"sourceRoot":"src/views"}]}